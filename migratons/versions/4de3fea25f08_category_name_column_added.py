"""category_name_column_added

Revision ID: 4de3fea25f08
Revises: 84c99c1853a5
Create Date: 2025-04-23 18:35:09.473138

"""
from typing import Sequence, Union
from uuid import uuid4

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = '4de3fea25f08'
down_revision: Union[str, None] = '84c99c1853a5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # # ### commands auto generated by Alembic - please adjust! ###
    # op.add_column('sqla_catgory', sa.Column('name', sa.String(), nullable=False))
    # op.create_unique_constraint(None, 'sqla_catgory', ['name'])
    # # ### end Alembic commands ###
    """
    we can not add column with unique=True constraint without value so  we need to add value ourselves
    """
    # 1. add column without any constraint

    op.add_column(table_name='sqla_catgory', column=sa.Column('name', sa.String(),
                                                              nullable=True))  # name is the name of the column , if column_name was age here we should write name

    # 2. lets get the connection:
    conn = op.get_bind()
    # 3. get all rows:
    result = conn.execute(
        sa.text("SELECT id FROM sqla_catgory"))  # we just need id not all the columns so no need for *
    rows = result.fetchall()

    # 4. assign unique names based on IDs or any logic you prefer
    for row in rows:
        conn.execute(
            sa.text("UPDATE sqla_catgory SET name = :name WHERE id = :id"),
            {"name": str(uuid4()), "id": row.id})  # it is better to not use f"" for sql

    # 5. now apply nullable constraint
    op.alter_column(table_name="sqla_catgory", column_name="name", nullable=False)

    # 6. now apply uniqueness constraint
    op.create_unique_constraint(constraint_name=None, table_name="sqla_catgory", columns=["name"])


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'sqla_catgory', type_='unique')
    op.drop_column('sqla_catgory', 'name')
    # ### end Alembic commands ###
